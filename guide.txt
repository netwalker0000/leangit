修改最新的提交说明
git commit --amend

修改某个历史提交的提交说明
git rebase -i <commit-id>^

删除最新提交中不该提交的文件
git rm --cached <file>
git commit --amend

将所有修改过得文件加入暂存
git add -u
将本地删除文件和新增文件都登记到提交暂存区
git add -A
对一个文件内的修改进行有选择性的增加
git add -p

逐字比较
git diff --word-diff

查看暂存区中的文件所作出的修改
git diff --cached

分页器操作
q ：退出分页器
h ：显示分页器帮助
空格/b : 下翻一页/上翻一页
d/u ：下翻半页/上翻半页
j/k : 上翻一行/下翻一行
如果行太长被截断，可以用左箭头和右箭头使窗口内容左右滚动
输入/pattern : 向下寻找和pattern匹配的内容
输入?pattern : 向上寻找和pattern匹配的内容
n/N ：向前/向后继续寻找
g ：调到第一行
G : 跳到最后一行
输入数字再加字母g ：跳转到对应的行
输入!<commond> ：执行shell命令

配置分页器自动换行
git config --global core.pager 'less -+$LESS -FRX'

配置别名
git config --global alias.st status
git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.br branch
--global只在本用户的全局配置中添加Git命令别名，--system能够被所有用户使用

别名可以包含命令参数
git config --global alias.ci "commit -s"

在Git命令输出中开启颜色显示
git config --global color.ui true

#显示包括隐藏目录在内的所有目录
ls -aF

搜索工作区的文件内容
git grep "工作区文件内容搜索"

显示版本库.git的位置
git rev-parse --git-dir
显示工作区根目录
git rev-parse --show-toplevel
相对于工作区根目录的相对目录
git rev-parse --show-prefix

编辑配置文件
版本库级
git config -e
全局
git config -e --global
系统级
git config -e --system
优先级：版本库>全局>系统级

用git config操作其他的INI文件
GIT_CONFIG=test.ini git config a.b.c.d "hello, world"
GIT_CONFIG=test.ini git config a.b.c.d

删除配置中的设置
git config --unset --global <section>.<key>

